{"version":3,"sources":["AddUser.js","Users.js","App.js","serviceWorker.js","index.js"],"names":["AddUser","state","name","age","color","handleChange","e","_this","setState","Object","defineProperty","target","id","value","handleSubmit","preventDefault","props","addUser","react_default","a","createElement","className","onSubmit","this","htmlFor","type","onChange","Component","Users","_ref","users","deleteUser","map","user","key","onClick","App","Math","random","concat","toConsumableArray","filter","src_Users","src_AddUser","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0452a1c4.chunk.js","sourcesContent":["import React,{Component} from 'react';\r\nimport 'tachyons';\r\n\r\nclass AddUser extends Component {\r\nstate={\r\n  name:null,\r\n  age:null,\r\n  color:null\r\n}\r\nhandleChange=(e)=>{\r\n  this.setState({\r\n    [e.target.id]:e.target.value\r\n  })\r\n}\r\n\r\nhandleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  this.props.addUser(this.state);\r\n}\r\n\r\n\r\nrender(){\r\n  return (\r\n    <div className=\"App ba bw1 mt2 pa3 bg-light-green  b--light-purple\">\r\n      <div className=\"b pa2 calisto f3 \">Enter Details</div>\r\n      <form onSubmit={this.handleSubmit}>\r\n        <br />\r\n        <label  htmlFor=\"name\">Name:</label>\r\n        <input className=\"b pa2 br3 ml3 input-reset ba bg-transparent hover-bg-black hover-white w-25\" type=\"text\" id=\"name\" onChange={this.handleChange} />\r\n        <br />\r\n        <label  htmlFor=\"name\">Age:</label>\r\n        <input className=\"b pa2 ml2 mt3 br3 input-reset ba bg-transparent hover-bg-black hover-white w-25\" type=\"text\" id=\"age\" onChange={this.handleChange} />\r\n        <br />\r\n        <label  htmlFor=\"name\">Color:</label>\r\n        <input className=\"b pa2 br3 ml2 mt3 input-reset ba bg-transparent hover-bg-black hover-white w-25\" type=\"text\" id=\"color\" onChange={this.handleChange} />\r\n        <br />\r\n        <button className=\"bw0 br2 bg-light-purple mt3 pa3 white fw1 tc ttu tracked\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default AddUser;\r\n","import React,{Component} from 'react';\r\nimport 'tachyons';\r\nconst Users=({users,deleteUser})=>{\r\n\treturn(\r\n\t\t<div className=\"user-list\">\r\n\t\t{\r\n\t\t\tusers.map(user=>{\r\n\t\t\t\treturn user.age>20\r\n\t\t\t\t?\r\n\t\t\t\t(\r\n\t\t\t\t\t<div className=\"user b--light-purple bw1 bt pa2  f4 \" key={user.id}>\r\n\t\t\t\t\t\t<div className=\"b pa2 calisto \">Name: {user.name}</div>\r\n\t\t\t\t\t\t<div className=\"pa2 calisto\">Age: {user.age}</div>\r\n\t\t\t\t\t\t<div className=\"pa2 calisto\">Color: {user.color}</div>\r\n\t\t\t\t\t\t<button  className=\"bw0 br2 bg-light-purple mt2 pa3 white f5 tc ttu tracked\" onClick={()=>{deleteUser(user.id)}}>Delete User</button>\r\n\t\t\t\t\t\t<br />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)\r\n\t\t\t\t:\r\n\t\t\t\tnull;\r\n\t\t\t})\r\n\t\t}\r\n\t\t</div>\r\n\t\t)\r\n\r\n}\r\n\r\nexport default Users;","import React,{Component} from 'react';\nimport AddUser from './AddUser';\nimport Users from './Users';\nimport './App.css';\nimport 'tachyons';\n\nclass App extends Component {\n\nstate={\n  users:[\n    {name:'Harsh',age:30,color:'black',id:1},\n    {name:'Himanshu',age:27,color:'brown',id:2},\n    {name:'Ikbal',age:26,color:'white',id:3},\n  ]\n}\naddUser=(user)=>{\n  user.id=Math.random();\n  let users=[...this.state.users,user];\n  this.setState({\n    users:users\n  })\n}\n\ndeleteUser=(id)=>{\n  let users=this.state.users.filter(user=>{\n    return user.id!==id;\n});\n  this.setState({\n    users:users\n  })\n}\n\n\nrender(){\n  return (\n    <div className=\"App\">\n      <div className=\" b bg-light-green mt0 pa4 calisto  \">\n      <h1>Register Here!</h1>\n      </div>\n      <Users deleteUser={this.deleteUser} users={this.state.users}/>\n      <AddUser addUser={this.addUser}/>\n    </div>\n  );\n}\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}